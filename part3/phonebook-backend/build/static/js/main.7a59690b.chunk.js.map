{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/PersonList.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","Axios","get","then","response","data","newObject","post","personID","deleteURL","delete","showError","put","Filter","nameSearch","handleNameSearch","value","onChange","PersonForm","handleNameSubmission","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Person","person","handleDelete","name","number","onClick","id","PersonList","list","map","key","App","useState","persons","setPersons","setNewName","setNewNumber","setNameSearch","setPersonsShown","message","setMessage","useEffect","personsServices","initialPersons","updatePerson","window","confirm","foundPerson","find","foundPersonID","updatedPerson","returnedPerson","catch","error","addNewPerson","returnedPersons","concat","setTimeout","Notification","className","event","nameToSearch","target","personsToShow","filter","toLowerCase","includes","preventDefault","some","personId","newList","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.7a59690b.chunk.js","sourcesContent":["import Axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = Axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = Axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deletePerson = (personID) => {\n  const deleteURL = `${baseUrl}/${personID}`;\n  const request = Axios.delete(deleteURL);\n  return request.then((response) => response.data);\n};\n\nconst update = (personID, newObject, showError) => {\n  const request = Axios.put(`${baseUrl}/${personID}`, newObject);\n  return request.then((response) => response.data);\n  // .catch((error) => showError());\n};\n\nexport default { getAll, create, deletePerson, update };\n","import React from 'react';\n\nconst Filter = ({ nameSearch, handleNameSearch }) => {\n  return (\n    <div>\n      Search for a number:{' '}\n      <input value={nameSearch} onChange={handleNameSearch} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = ({\n  handleNameSubmission,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => {\n  return (\n    <form onSubmit={handleNameSubmission}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <button type=\"submit\">add</button>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Person = ({ person, handleDelete }) => (\n  <p>\n    {person.name} - {person.number}{' '}\n    <button onClick={() => handleDelete(person.id)}>delete</button>\n  </p>\n);\n\nexport default Person;\n","import React from 'react';\nimport Person from './Person';\n\nconst PersonList = ({ list, handleDelete }) =>\n  list.map((person) => (\n    <Person key={person.id} person={person} handleDelete={handleDelete} />\n  ));\n\nexport default PersonList;\n","import React, { useState, useEffect } from 'react';\nimport personsServices from './services/persons';\nimport './App.css';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport PersonList from './components/PersonList';\nimport './index.css';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [nameSearch, setNameSearch] = useState('');\n  const [personsShown, setPersonsShown] = useState(persons);\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    personsServices.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n  const nameExists = (personList, name) =>\n    personList.some((person) => person.name === name);\n\n  const handleNameSubmission = (event) => {\n    event.preventDefault();\n    if (nameExists(persons, newName)) {\n      // window.alert(`${newName} is already added`);\n      updatePerson(newName);\n    } else {\n      addNewPerson();\n    }\n  };\n\n  const updatePerson = (name) => {\n    if (window.confirm('Do you want to overwrite this number?')) {\n      const foundPerson = persons.find((person) => person.name === name);\n      const foundPersonID = foundPerson.id;\n      const updatedPerson = { ...foundPerson, number: newNumber };\n\n      personsServices\n        .update(foundPersonID, updatedPerson)\n        .then((returnedPerson) => {\n          setPersons(\n            persons.map((person) =>\n              person.id === foundPersonID ? returnedPerson : person\n            )\n          );\n        })\n        .catch((error) => {\n          setPersons(persons);\n          setMessage('fail');\n        });\n    }\n  };\n\n  const addNewPerson = () => {\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n\n    // Axios.post('http://localhost:6001/persons', newPerson).then((response) => {\n    //   setPersons(persons.concat(response.data));\n    // });\n    personsServices.create(newPerson).then((returnedPersons) => {\n      setPersons(persons.concat(returnedPersons));\n      setMessage('success');\n      setTimeout(() => {\n        setMessage(null);\n      }, 3000);\n    });\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const handleNameSearch = (event) => {\n    const nameToSearch = event.target.value;\n\n    setNameSearch(nameToSearch);\n    const personsToShow = persons.filter((person) =>\n      person.name.toLowerCase().includes(nameToSearch.toLowerCase())\n    );\n    setPersonsShown(personsToShow);\n  };\n\n  const filterPersons = () => {\n    if (nameSearch === '') {\n      return persons;\n    } else {\n      return persons.filter((person) =>\n        person.name.toLowerCase().includes(nameSearch.toLowerCase())\n      );\n    }\n  };\n\n  const handleDelete = (personId) => {\n    if (window.confirm('Do you want to delete this record?')) {\n      personsServices.deletePerson(personId).then(() => {\n        const newList = persons.filter((person) => person.id !== personId);\n        setPersons(newList);\n      });\n    }\n  };\n\n  const Notification = ({ message }) => {\n    if (message === 'success') {\n      return (\n        <div className=\"success\">\n          You have successfully added to the phonebook\n        </div>\n      );\n    }\n\n    if (message === 'fail') {\n      return (\n        <div className=\"fail\">\n          {newName} has already been removed from the server\n        </div>\n      );\n    } else {\n      return null;\n    }\n  };\n  return (\n    <div>\n      <Notification message={message} />\n      <h1>Phonebook</h1>\n      <Filter nameSearch={nameSearch} handleNameSearch={handleNameSearch} />\n      <PersonForm\n        handleNameSubmission={handleNameSubmission}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <PersonList list={filterPersons()} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}