{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","axios","get","then","response","data","newObject","post","id","request","put","console","log","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"kNAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCK3BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKJ,UAAU,SACZI,I,gBCiBQ,EAvBA,WASb,OARgBC,IAAMC,IAHR,cAWCC,MAAK,SAACC,GAAD,OAAcA,EAASC,SAc9B,EAXA,SAACC,GAEd,OADgBL,IAAMM,KAfR,aAesBD,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAS9B,EANA,SAACG,EAAIF,GAClB,IAAMG,EAAUR,IAAMS,IAAN,UApBF,aAoBE,YAAwBF,GAAMF,GAE9C,OADAK,QAAQC,IAAIH,GACLA,EAAQN,MAAK,SAACC,GAAD,OAAcA,EAASC,SC2D9BQ,EA7EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAAqBrB,MAAK,SAACsB,GACzBT,EAASS,QAEV,IAEH,IAqCMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAACnC,GAAD,OAAUA,EAAKG,aAElE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAASqB,IACvB,6BACE,4BAAQvB,QAAS,kBAAMsB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYE,KAAI,SAACpC,EAAMqC,GAAP,OACf,kBAAC,EAAD,CACEC,IAAKD,EACLrC,KAAMA,EACNC,iBAAkB,kBAtCD,SAACe,GAC1B,IAAMhB,EAAOuB,EAAMgB,MAAK,SAACC,GAAD,OAAOA,EAAExB,KAAOA,KAClCyB,EAAW,2BAAQzC,GAAR,IAAcG,WAAYH,EAAKG,YAChD6B,EACUhB,EAAIyB,GACX9B,MAAK,SAAC+B,GACLlB,EAASD,EAAMa,KAAI,SAACpC,GAAD,OAAWA,EAAKgB,KAAOA,EAAKhB,EAAO0C,SAEvDC,OAAM,SAACC,GACNd,EAAgB,SAAD,OACJ9B,EAAKK,QADD,sCAGfwC,YAAW,WACTf,EAAgB,QACf,QAwByBgB,CAAmB9C,EAAKgB,WAItD,0BAAM+B,SAzDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB7C,QAASoB,EACT0B,MAAM,IAAIC,MAAOC,cACjBlD,UAAWmD,KAAKC,SAAW,GAC3BvC,GAAIO,EAAMiC,OAAS,GAGrBxB,EAAmBkB,GAAYvC,MAAK,SAAC+B,GACnClB,EAASD,EAAMkC,OAAOf,IACtBhB,EAAW,SA+CT,2BAAOgC,MAAOjC,EAASkC,SAzBJ,SAACX,GACxBtB,EAAWsB,EAAMY,OAAOF,UAyBpB,4BAAQG,KAAK,UAAb,W,MCvERC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.ff380e33.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios';\nconst baseUrl = '/api/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  // const nonExisting = {\n  //   id: 10000,\n  //   content: 'This note is not saved to server',\n  //   date: '2019-05-30T17:30:31.098Z',\n  //   important: true,\n  // };\n  // return request;\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  console.log(request);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update };\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => (\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}